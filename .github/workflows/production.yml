name: Build React Artifact and Deploy Image to ECR

on:
  pull_request:
    branches: [ "main" ]
    types:
      - closed
  workflow_dispatch:
    branches: [ "main" ]

env:
  AWS_REGION : ap-northeast-2

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.22.0' # default is latest stable
        id: install

      - name: Create application-db.yml
        run: |
          touch ./src/main/resources/application-db.yml
          echo "${{ secrets.DB_YML }}" > ./src/main/resources/application-db.yml
      
      - name: Create application-swagger.yml
        run: |
          touch ./src/main/resources/application-swagger.yml
          echo "${{ secrets.SWAGGER_YML }}" > ./src/main/resources/application-swagger.yml

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Gradle wrapper 파일 실행 권한주기
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Gradle clean
        run: ./gradlew clean

      - name: Execute Gradle build
        run: ./gradlew build

      # Configure the GitHub Actions environment with a role using GitHub's OIDC provider and your desired region
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PRODUCTION_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.PRODUCTION_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # Login to Amazon ECR Private, then build and push a Docker image
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: dev3api
          IMAGE_TAG: latest # Github commit ID (sha)
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"
#
      - name: Update kube config
        run: aws eks update-kubeconfig --name uplus3 --region ap-northeast-2
        
      - name: Deploy Image to Amazon EKS
        run: |
          kubectl apply -f k8s/aws-auth.yml
          kubectl apply -f k8s/api-deployment.yml
          kubectl apply -f k8s/issuer.yml
          kubectl apply -f k8s/ingress.yml